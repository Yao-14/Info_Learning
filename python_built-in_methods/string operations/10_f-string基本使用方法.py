'''f-string基本使用方法：在字符串前添加一个f，并在字符串内用{}表示被替换字段，并在{}中直接填入替换内容,
内容可以是字符串、可以是整型，也可以是浮点型,还可以是表达式或调用函数
'''

name = 'yjj'
age = 1 + 2 +10 + 7
height = 176.5
print(f'我的名字是{name.upper()},我今年{age}岁,我的身高是{height}cm')

'''
f-string可以自定义字符串格式，包括对齐、宽度、符号、补零、精度、进制等，在{}中填入{替换内容：格式}
'''
#对齐：<左对齐、>右对齐、^居中，
s = 3.1415926
print(f'{s:<14}') #14表示位数，若字符不够，用空格补齐位数
print(f'{s:>14}')
print(f'{s:^14}')

'''
进制
#0b转化为二进制
#0o转化为八进制
#0x转化为16进制的小写字母
#0X转化为16进制的大写字母
'''
n = 123
print(f'{n:#0b}')
print(f'{n:#0o}')
print(f'{n:#0x}')
print(f'{n:#0X}')

#宽度与精度
t = 313.1415926
print(f'{t:8.2f}') #8表示宽度即位数，不够默认用空格补；.2f表示保留2位小数
print(f'{t:08.2f}') #8表示宽度即位数，不够用0补
print(f'{t:8.2e}') #.2e表示用科学计数法表示并表示保留2位小数
print(f'{t:8.2%}') #.2%表示用百分数表示并表示保留2位小数
#对于字符串 s
m = '我叫陈冠希'
print(f'{m:8s}') #8表示宽度即位数，不够默认用空格补
print(f' {m:8.3s}') #8表示宽度即位数，.3s表示只取字符串的前三位

#千分位分割
a =1234567899
print(f'{a:,f}')